{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nvar defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\n// In dev env, we refresh salt per hour to avoid user use this\n// Note: Do not modify this to real time update which will make debug harder\nvar saltPrefix = process.env.NODE_ENV === 'production' ? version : version + \"-\" + new Date().getHours();\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n    rootDesignToken = _React$useContext.token,\n    hashed = _React$useContext.hashed,\n    theme = _React$useContext.theme,\n    components = _React$useContext.components;\n  var salt = saltPrefix + \"-\" + (hashed || '');\n  var mergedTheme = theme || defaultTheme;\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n      salt: salt,\n      override: _extends({\n        override: rootDesignToken\n      }, components),\n      formatToken: formatToken\n    }),\n    _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n    token = _useCacheToken2[0],\n    hashId = _useCacheToken2[1];\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"names":["_extends","_slicedToArray","createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","statistic","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","saltPrefix","process","env","NODE_ENV","Date","getHours","useToken","_React$useContext","useContext","rootDesignToken","theme","components","salt","mergedTheme","_useCacheToken","override","_useCacheToken2","hashId"],"sources":["/Users/stephanie/Desktop/CS Code 2022/CS1300 UIUX/ResponsiveRedesignUIUX/node_modules/antd/es/theme/internal.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nvar defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\n// In dev env, we refresh salt per hour to avoid user use this\n// Note: Do not modify this to real time update which will make debug harder\nvar saltPrefix = process.env.NODE_ENV === 'production' ? version : version + \"-\" + new Date().getHours();\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n    rootDesignToken = _React$useContext.token,\n    hashed = _React$useContext.hashed,\n    theme = _React$useContext.theme,\n    components = _React$useContext.components;\n  var salt = saltPrefix + \"-\" + (hashed || '');\n  var mergedTheme = theme || defaultTheme;\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n      salt: salt,\n      override: _extends({\n        override: rootDesignToken\n      }, components),\n      formatToken: formatToken\n    }),\n    _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n    token = _useCacheToken2[0],\n    hashId = _useCacheToken2[1];\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,cAAc,MAAM,0CAA0C;AACrE,SAASC,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAClF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,iBAAiB,MAAM,kBAAkB;AAChD,OAAOC,gBAAgB,MAAM,eAAe;AAC5C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,qBAAqB,MAAM,8BAA8B;AAChE,OAAOC,cAAc,IAAIC,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACjF,IAAIC,YAAY,GAAGd,WAAW,CAACM,iBAAiB,CAAC;AACjD;AACA;AACAD,YAAY;AACZ;AACAQ,SAAS,EAAEH,cAAc,EAAEE,UAAU;AACrC;AACAV,gBAAgB,EAAEO,qBAAqB;AACvC;AACA;AACA,OAAO,IAAIM,aAAa,GAAG;EACzBC,KAAK,EAAET,gBAAgB;EACvBU,MAAM,EAAE;AACV,CAAC;AACD,OAAO,IAAIC,kBAAkB,GAAG,aAAaf,KAAK,CAACgB,aAAa,CAACJ,aAAa,CAAC;AAC/E;AACA;AACA;AACA,IAAIK,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGnB,OAAO,GAAGA,OAAO,GAAG,GAAG,GAAG,IAAIoB,IAAI,EAAE,CAACC,QAAQ,EAAE;AACxG,OAAO,SAASC,QAAQ,GAAG;EACzB,IAAIC,iBAAiB,GAAGxB,KAAK,CAACyB,UAAU,CAACV,kBAAkB,CAAC;IAC1DW,eAAe,GAAGF,iBAAiB,CAACX,KAAK;IACzCC,MAAM,GAAGU,iBAAiB,CAACV,MAAM;IACjCa,KAAK,GAAGH,iBAAiB,CAACG,KAAK;IAC/BC,UAAU,GAAGJ,iBAAiB,CAACI,UAAU;EAC3C,IAAIC,IAAI,GAAGZ,UAAU,GAAG,GAAG,IAAIH,MAAM,IAAI,EAAE,CAAC;EAC5C,IAAIgB,WAAW,GAAGH,KAAK,IAAIhB,YAAY;EACvC,IAAIoB,cAAc,GAAGjC,aAAa,CAACgC,WAAW,EAAE,CAAC1B,gBAAgB,EAAEsB,eAAe,CAAC,EAAE;MACjFG,IAAI,EAAEA,IAAI;MACVG,QAAQ,EAAErC,QAAQ,CAAC;QACjBqC,QAAQ,EAAEN;MACZ,CAAC,EAAEE,UAAU,CAAC;MACdvB,WAAW,EAAEA;IACf,CAAC,CAAC;IACF4B,eAAe,GAAGrC,cAAc,CAACmC,cAAc,EAAE,CAAC,CAAC;IACnDlB,KAAK,GAAGoB,eAAe,CAAC,CAAC,CAAC;IAC1BC,MAAM,GAAGD,eAAe,CAAC,CAAC,CAAC;EAC7B,OAAO,CAACH,WAAW,EAAEjB,KAAK,EAAEC,MAAM,GAAGoB,MAAM,GAAG,EAAE,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}